@model AppTemplate.Models.RoleViewModel

@{
    ViewBag.Title = "Create Role";
}


<section class="content-header">
    <h1>
        Create Role
    </h1>
    <ol class="breadcrumb">
        <li><a href="/Home/Welcome"><i class="fa fa-home"></i> Home</a></li>
        <li><a href="/Roles/Index"><i class="fa fa-unlock"></i> Roles</a></li>
        <li class="active">Create Role</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="box box-primary">
        <div class="box-header with-border">
            @Html.ActionLink("Back to List", "Index")
            @*<div class="box-tools pull-right">
                    @using (Html.BeginForm())
                    {
                        <div class="input-group" style="width: 150px;">
                            <input type="text" name="table_search" class="form-control input-sm pull-right" placeholder="Search">
                            <div class="input-group-btn">
                                <button class="btn btn-sm btn-default"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    }
                </div>*@
        </div>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="box-body form-horizontal">
                @Html.ValidationSummary(true)

                @if (ViewBag.Message != "")
                {
                    <p style="color: red">ViewBag.Message</p>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.RoleName, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.DropDownListFor(m => m.RoleName, (SelectList)ViewBag.Roles, new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Privileges", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @foreach (var p in ViewBag.Privileges)
                {
                            <div class="checkbox col-md-3">
                                <input type="checkbox" name="privilege" value="@p.Id" />
                                @Html.Label((string)p.Action, new { @for = (string)p.Id })
                            </div>
                        }
                    </div>
                </div>
            </div><!-- /.box-body -->
            <div class="box-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-4">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div><!-- /.box-footer -->
        }

    </div><!-- /.box -->
</section><!-- /.content -->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


